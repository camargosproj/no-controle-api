generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(uuid())
  name                String
  email               String
  password            String
  sharedAccountGroups AccountGroup[]
  expenses            Expense[]
  income              Income[]
  SharedAccountGroup  SharedAccountGroup[]
}

model Category {
  id      String    @id @default(uuid())
  name    String
  type    String
  Expense Expense[]
  Income  Income[]
}

model Expense {
  id                   String              @id @default(uuid())
  amount               Float
  description          String
  date                 DateTime
  category             Category            @relation(fields: [categoryId], references: [id])
  categoryId           String
  user                 User                @relation(fields: [userId], references: [id])
  userId               String
  SharedAccountGroup   SharedAccountGroup? @relation(fields: [sharedAccountGroupId], references: [id])
  sharedAccountGroupId String?
  AccountGroup         AccountGroup?       @relation(fields: [accountGroupId], references: [id])
  accountGroupId       String?
}

model Income {
  id                   String              @id @default(uuid())
  amount               Float
  description          String
  date                 DateTime
  category             Category            @relation(fields: [categoryId], references: [id])
  categoryId           String
  user                 User                @relation(fields: [userId], references: [id])
  userId               String
  SharedAccountGroup   SharedAccountGroup? @relation(fields: [sharedAccountGroupId], references: [id])
  sharedAccountGroupId String?
  AccountGroup         AccountGroup?       @relation(fields: [accountGroupId], references: [id])
  accountGroupId       String?
}

model SharedAccountGroup {
  id             String       @id @default(uuid())
  accountGroup   AccountGroup @relation(fields: [accountGroupId], references: [id])
  accountGroupId String
  sharedWith     User         @relation(fields: [userId], references: [id])
  userId         String
  Expense        Expense[]
  Income         Income[]
}

model AccountGroup {
  id             String               @id @default(uuid())
  name           String
  description    String
  totalAmmout    Float                @default(0)
  Expense        Expense[]
  Income         Income[]
  sharedAccounts SharedAccountGroup[]
  groupOwner     User?                @relation(fields: [userId], references: [id])
  userId         String?
}
