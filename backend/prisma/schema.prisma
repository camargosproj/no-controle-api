generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                   @id @default(uuid())
  name                   String
  email                  String                   @unique
  password               String
  Expenses               Expense[]
  Income                 Income[]
  SharedTransactionGroup SharedTransactionGroup[]
  TransactionGroup       TransactionGroup[]
}

model Category {
  id      String    @id @default(uuid())
  name    String    @unique
  type    String
  Expense Expense[]
  Income  Income[]
}

model Expense {
  id                 String            @id @default(uuid())
  amount             Float
  description        String
  date               DateTime
  category           Category          @relation(fields: [categoryId], references: [id])
  categoryId         String
  user               User              @relation(fields: [userId], references: [id])
  userId             String
  transactionGroup   TransactionGroup? @relation(fields: [transactionGroupId], references: [id])
  transactionGroupId String?
}

model Income {
  id                 String            @id @default(uuid())
  amount             Float
  description        String
  date               DateTime
  category           Category          @relation(fields: [categoryId], references: [id])
  categoryId         String
  user               User              @relation(fields: [userId], references: [id])
  userId             String
  transactionGroup   TransactionGroup? @relation(fields: [transactionGroupId], references: [id])
  transactionGroupId String?
}

model TransactionGroup {
  id                     String                   @id @default(uuid())
  name                   String
  description            String
  totalAmount            Float                    @default(0)
  expenses               Expense[]
  incomes                Income[]
  sharedTransactionGroup SharedTransactionGroup[]
  groupOwner             User?                    @relation(fields: [userId], references: [id])
  userId                 String?
}

model SharedTransactionGroup {
  id                 String           @id @default(uuid())
  transactionGroup   TransactionGroup @relation(fields: [transactionGroupId], references: [id])
  transactionGroupId String
  sharedWith         User             @relation(fields: [userId], references: [id])
  userId             String
}
